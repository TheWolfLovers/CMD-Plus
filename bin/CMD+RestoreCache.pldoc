#imports
import random
import os
import sys
import time
########################################################
#important variables
power = "ON"
ver = "Alpha 0.1.4"
Credentials = []
listedcommands = "The following commands are:\n/write - allows you to write to 1-5 files any text you want\n/accountconfig - allows you to change username or password, or delete your account entirely (not files tho)\n/log - reads Log text files when specified with a number (goes in \'00\' digits)\n/wlog - similar to /log, however the \'w\' stands for \'write\', implying you write logs instead. (also done in double digits, i.e 01)\nAnd the following commands are admin controls:\nupadate - updates CMD+ using an upgrade.py file, this also backs up CMD+\nbackup - backs up CMD+ into CMD+.BACKUP.py\nrestore - will restore CMD+ from CMD+.BACKUP.py\n"
########################################################
#subrutines~

def load():
    prin("[---")
    stutter = random.randint(1,10)
    time.sleep(stutter)
    prin("----")
    stutter = random.randint(1,10)
    time.sleep(stutter)
    prin("---")
    stutter = random.randint(1,10)
    time.sleep(stutter)
    prin("-------")
    stutter = random.randint(1,10)
    time.sleep(stutter)
    prin("--\\")
    stutter = random.randint(1,10)
    time.sleep(stutter)
    print(" Done!!")
    
            
def prin(text):
    for char in text:
        print(char,end='',flush=True)
        time.sleep(0.05)

def shutdown():
    print("System shutting down...")
    time.sleep(5)
    sys.exit()

def update():
    with open("CMD+.py", "r") as source:
        content = source.read()
    with open("CMD+.BACKUP.py", "w") as backup:
        backup.write(content)
        print(f"CMD+ is backing up the current version {ver} please wait")
        load()
        print(f"CMD+ version {ver} has been backed up, updating...")
        load()
        
    with open("update.py", "r") as file6:
        update = file6.read()
        with open("CMD+.py", "w") as f:
            f.write(update)
        

def backup():
    with open("CMD+.py", "r") as source:
        content = source.read()
    with open("CMD+.BACKUP.py", "w") as backup:
        backup.write(content)
        print(f"CMD+ version {ver} backing up into CMD+.BACKUP.py... Please wait...")
        load()
            
def CreateAccount():
    Username = input("Enter the username you want:\n")
    password = input("Enter your new password:\n")
    with open("account.json", "w") as file2:
        file2.write(Username + "," + password)
    with open("CreatedAccount.json", "w") as file4:
        file4.write("True")
        
def SignIn():
    with open("account.json", "r") as file3:
        for line in file3:
            Username, password = line.strip().split(",")
            Credentials.append((Username, password))
        Username_Pass = input("What is your Username\n")
        Password_Pass = input("What is your Password\n")
        if Username_Pass == Username and Password_Pass == password:
            print("Correct password, signing in")
            time.sleep(4)
        else:
            print("Incorrect password, shutting down")
            shutdown()


with open("CreatedAccount.json", "r") as file1:
    true = file1.read()
    if true != "True":
        print("CreatedAccount.json reads False, thus it's time to create an account\n\n")
        CreateAccount()
    else:
        SignIn()


print("welcome")
while power == "ON":
    action = input("\nWhat action shall we do today?\n(type /help to see commands)\n[/> ")
    if action == "/write":
        whichFile = input("which file number do you want? (1-5)\n{/>")
        fileaction = input("append, read or over-write? (a, r, w)\n{/> ")
        if whichFile == "1" and fileaction == "a":
            with open(r"text library\text1", "a") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "2" and fileaction == "a":
            with open(r"text library\text2", "a") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "3" and fileaction == "a":
            with open(r"text library\text3", "a") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "4" and fileaction == "a":
            with open(r"text library\text4", "a") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "5" and fileaction == "a":
            with open(r"text library\text5", "a") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")

        elif whichFile == "1" and fileaction == "w":
            with open(r"text library\text1", "w") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "2" and fileaction == "w":
            with open(r"text library\text2", "w") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "3" and fileaction == "w":
            with open(r"text library\text3", "w") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "4" and fileaction == "w":
            with open(r"text library\text4", "w") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "5" and fileaction == "w":
            with open(r"text library\text5", "w") as tf:
                write = input("what to store?\n[/> ")
                tf.write(write)
                print("File written :) ")
        elif whichFile == "1" and fileaction == "r":
            with open(r"text library\text1", "r") as tf:
                read = tf.read()
                print(read)
                time.sleep(30)
        elif whichFile == "2" and fileaction == "r":
            with open(r"text library\text2", "r") as tf:
                read = tf.read()
                print(read)
                time.sleep(30)
        elif whichFile == "3" and fileaction == "r":
            with open(r"text library\text3", "r") as tf:
                read = tf.read()
                print(read)
                time.sleep(30)
        elif whichFile == "4" and fileaction == "r":
            with open(r"text library\text4", "r") as tf:
                read = tf.read()
                print(read)
                time.sleep(30)
        elif whichFile == "5" and fileaction == "r":
            with open(r"text library\text5", "r") as tf:
                read = tf.read()
                print(read)
                time.sleep(30)




    elif action == "backup":
        backup()


    elif action == "update":
        update()
        print("updated! installing...")
        shutdown()
        
    elif action == "restore":
        with open("CMD+.BACKUP.py", "r") as restore:
            code = restore.read()
            print("Backup file found... reading...")
            time.sleep(5)
            with open("CMD+RestoreCache.json", "w") as cache:
                cache.write(code)
                print("Backup file cached...")
                time.sleep(2)
                with open("CMD+RestoreCache.json", "r") as cacheR:
                    code2 = cacheR.read()
                    print("Reading cached backup...")
                    with open("CMD+.py", "w") as subject:
                        print("Replacing program with backup....")
                        time.sleep(5)
                        subject.write(code2)
                        time.sleep(3)
                        print("Done!")
                        shutdown()










    elif action == "exit":
        power = "OFF"
        if input("Are you sure? (y/n)") == "y":
            shutdown()
        else:
            power = "ON"
    elif action == "/accountconfig":
        action = input("Right, you are now configuring your account\n\nChange password = 1\nChange username = 2\nDelete account = 3\n(/> ")

        if action == "1":
            with open("account.json", "r") as file2:

                for line in file2:
                    Username, password = line.strip().split(",")
                    Credentials.append((Username, password))

                password = input("Enter your new Password:\n")

                with open("account.json", "w") as FConfig:
                    FConfig.write(Username + "," + password)
                
        elif action == "2":
            with open("account.json", "r") as file2:
                for line in file2:
                    Username, password = line.strip().split(",")
                    Credentials.append((Username, password))
                Username = input("Enter your new Username:\n")
                with open("account.json", "w") as FConfig:
                    FConfig.write(Username + "," + password)
            
        elif action == "3":
            with open("account.json", "w") as file2:
                file2.write("")
            with open("CreatedAccount.json", "w") as file1:
                file1.write("False")
            if input("Account deleted\nDo you want to carry on using CMD+?\n(y/n)\n{/> ") == "y":
                print("Ok")
            else:
                print("Oh... hope to see you again soon!")
                time.sleep(3)
                shutdown()
        
        else:
            print("Sorry, incorrect action")
            time.sleep(2)
    elif action == "/help":
        print(listedcommands)

    elif action == "/settings":
        act = input("at the moment, we only have the about page...\n(about)\n{/> ")

    elif action == '/wlog':
        logno = input("What number is your Log?\n(/> ")
        logtitle = input("What's the title for this log?\n[/> ")
        logdet = input("Write you log here:\n\n")

        with open(f"Logs\\Log{logno}.txt", "w") as log:
            log.writelines(logno + '\n' + logtitle + '\n\n' + logdet)
            print(f"\n\nWriting Log {logno} titled {logtitle}...")
            load()
    elif action == '/log':
        logno = input("Which log do you want to read?\n(defined by its log number)\n{/> ")
        try:
            with open(f"Logs\\Log{logno}.txt", "r") as log:
                logno, logtitle, blank, logdet = log.readlines()
                print("reading Log...\n")
                time.sleep(2)
                prin(f"Log: {logno} \n")
                prin(f"{logtitle}\n\n")
                prin(logdet)

                input("\n\nonce you\'ve done reading you can press enter to exit")
        except FileNotFoundError:
            prin(f"\nThe Log {logno} you was looking for doesnt exist, check if it's the right number\n\n")
    
        
#carry on above this line to go downward

    else:
        print("\nUnknown command, maybe check /help to see if you typed it in correctly\n")
